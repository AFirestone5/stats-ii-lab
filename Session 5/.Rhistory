# Load data
ed_fake <- read_csv("data/father_education.csv")
# Load data
ed_fake <- read_csv("data/father_education.csv")
View(ed_fake)
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
sms <- rep(c(1,0)), each = 500)
sms <- rep(c(1 , 0)), each = 500)
sms <-
?rep
?rep
sms <- rep.int(c(1,0), 500)
sms <- c(rep.int(1, 500), rep.int(0,500))
sms
village_name
data <- cbind(village_name,sms)
data
data <- cbind(village_name,sms) %>% data.frame()
View(data)
View(data)
c(rep.int(1, 90), rep.int(0,10))
net_use <- c(rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60))
data <- cbind(village_name,sms, net_use) %>% data.frame()
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
sms <- c(rep.int(1, 500), rep.int(0,500))
net_use <- c(rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60))
data <- cbind(village_name,sms, net_use) %>% data.frame()
View(data)
malaria <-  c(rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18))
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
sms <- c(rep.int(1, 500), rep.int(0,500))
net_use <- c(rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60))
malaria <-  c(rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 89), rep.int(1,1), rep.int(1, 7), rep.int(0,3),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18))
data <- cbind(village_name,sms, net_use, malaria) %>% data.frame()
View(data)
lm(malaria ~ net_use)
summary(lm(malaria ~ net_use))
dat <- read_csv("data/vaa-experiment.csv")
names(dat)
ctable(dat$vaa_use, dat$vaa_encouragement,  prop = "n")
AER::ivreg(voted ~ vaa_use | vaa_encouragement)
AER::ivreg(malaria ~ net_use | sms)
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
sms <- c(rep.int(1, 500), rep.int(0,500))
net_use <- c(rep.int(1, 70), rep.int(0,30),
rep.int(1, 80), rep.int(0,20),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 70), rep.int(0,30),
rep.int(1, 80), rep.int(0,20),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60))
malaria <-  c(rep.int(0, 60), rep.int(1,10), rep.int(1, 15), rep.int(0,15),
rep.int(0, 75), rep.int(1,5), rep.int(1, 12), rep.int(0,8),
rep.int(0, 85), rep.int(1,5), rep.int(1, 9), rep.int(0,1),
rep.int(0, 60), rep.int(1,10), rep.int(1, 17), rep.int(0,13),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18),
rep.int(0, 39), rep.int(1,1), rep.int(1,42), rep.int(0,18))
data <- cbind(village_name,sms, net_use, malaria) %>% data.frame()
summary(lm(malaria ~ net_use))
AER::ivreg(malaria ~ net_use | sms)
summary(AER::ivreg(malaria ~ net_use | sms))
summary(lm(malaria ~ net_use))
summary(lm(malaria ~ sms))
malaria <-  c(rep.int(0, 60), rep.int(1,10), rep.int(1, 15), rep.int(0,15),
rep.int(0, 75), rep.int(1,5), rep.int(1, 12), rep.int(0,8),
rep.int(0, 85), rep.int(1,5), rep.int(1, 9), rep.int(0,1),
rep.int(0, 60), rep.int(1,10), rep.int(1, 17), rep.int(0,13),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,45), rep.int(0,15),
rep.int(0, 20), rep.int(1,42), rep.int(0,18),
rep.int(0, 22), rep.int(1,3), rep.int(1,55), rep.int(0,20),
rep.int(0, 35), rep.int(1,5), rep.int(1,40), rep.int(0,20))
malaria <-  c(rep.int(0, 60), rep.int(1,10), rep.int(1, 15), rep.int(0,15),
rep.int(0, 75), rep.int(1,5), rep.int(1, 12), rep.int(0,8),
rep.int(0, 85), rep.int(1,5), rep.int(1, 9), rep.int(0,1),
rep.int(0, 60), rep.int(1,10), rep.int(1, 17), rep.int(0,13),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,45), rep.int(0,15),
rep.int(0, 20), rep.int(1,62), rep.int(0,18),
rep.int(0, 22), rep.int(1,3), rep.int(1,55), rep.int(0,20),
rep.int(0, 35), rep.int(1,5), rep.int(1,40), rep.int(0,20))
village_name <- rep(c("Coruscant", "Mos Eisley", "Hill Valley", "Springfield", "Hogsmeade",
"Burrow", "Little Hangleton", "Little Whinging", "Malfoy Manor", "Shell Cottage"), each = 100)
sms <- c(rep.int(1, 500), rep.int(0,500))
net_use <- c(rep.int(1, 70), rep.int(0,30),
rep.int(1, 80), rep.int(0,20),
rep.int(1, 90), rep.int(0,10),
rep.int(1, 70), rep.int(0,30),
rep.int(1, 80), rep.int(0,20),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 40), rep.int(0,60),
rep.int(1, 20), rep.int(0,80),
rep.int(1, 25), rep.int(0,75),
rep.int(1, 40), rep.int(0,60))
malaria <-  c(rep.int(0, 60), rep.int(1,10), rep.int(1, 15), rep.int(0,15),
rep.int(0, 75), rep.int(1,5), rep.int(1, 12), rep.int(0,8),
rep.int(0, 85), rep.int(1,5), rep.int(1, 9), rep.int(0,1),
rep.int(0, 60), rep.int(1,10), rep.int(1, 17), rep.int(0,13),
rep.int(0, 90), rep.int(1, 7), rep.int(0,3),
rep.int(0, 40), rep.int(1,42), rep.int(0,18),
rep.int(0, 40), rep.int(1,45), rep.int(0,15),
rep.int(0, 20), rep.int(1,62), rep.int(0,18),
rep.int(0, 22), rep.int(1,3), rep.int(1,55), rep.int(0,20),
rep.int(0, 35), rep.int(1,5), rep.int(1,40), rep.int(0,20))
data <- cbind(village_name,sms, net_use, malaria) %>% data.frame()
summary(lm(malaria ~ net_use))
summary(lm(malaria ~ sms))
summary(AER::ivreg(malaria ~ net_use | sms))
evaluation_data <- cbind(village_name,sms, net_use, malaria) %>% data.frame()
write_csv(evaluation_data, "/Users/sebastianramirez/Documents/GitHub/stats-ii-lab/Session 5/data/evaluation_data.csv")
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(stargazer) # for formatting model output
library(kableExtra) # for formatting data frames
library(AER) # for ivreg()
set.seed(123) # for consistent results
coordinates <- list(
x = c(SMS = 0, MN = 1, MAL = 4, U = 3),
y = c(SMS = 0, MN = 0, MAL = 0, U = 1)
)
dag <- dagify(MAL ~  MN + U,
MN ~ U + SMS,
coords = coordinates)
ggdag(dag, layout = "circle") +
theme_dag_blank()
library(ggdag)
coordinates <- list(
x = c(SMS = 0, MN = 1, MAL = 4, U = 3),
y = c(SMS = 0, MN = 0, MAL = 0, U = 1)
)
dag <- dagify(MAL ~  MN + U,
MN ~ U + SMS,
coords = coordinates)
ggdag(dag, layout = "circle") +
theme_dag_blank()
library(ggdag)
coordinates <- list(
x = c(SMS = 0, MN = 1, MAL = 3, U = 2),
y = c(SMS = 0, MN = 0, MAL = 0, U = 1)
)
dag <- dagify(MAL ~  MN + U,
MN ~ U + SMS,
coords = coordinates)
ggdag(dag, layout = "circle") +
theme_dag_blank()
library(ggdag)
coordinates <- list(
x = c(SMS = 0, MN = 1, MAL = 3, U = 2),
y = c(SMS = 0, MN = 0, MAL = 0, U = 1)
)
dag <- dagify(MAL ~  MN + U,
MN ~ U + SMS,
coords = coordinates)
ggdag(dag, layout = "circle") +
theme_dag_blank()
library(ggdag)
coordinates <- list(
x = c(SMS = 0, NET = 1, MAL = 3, U = 2),
y = c(SMS = 0, NET = 0, MAL = 0, U = 1)
)
dag <- dagify(MAL ~  NET + U,
NET ~ U + SMS,
coords = coordinates)
ggdag(dag, layout = "circle") +
theme_dag_blank()
dag_data <- tidy_dagitty(dag)$data
dag_data <- dag_data %>%
mutate(unobserved = as.factor(if_else(name == "U", "Unobserved", "Observed")))
dag_data %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = unobserved)) +
geom_dag_edges() +
geom_dag_text() +
theme_dag_blank()
dag_data %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = unobserved)) +
geom_dag_edges() +
geom_dag_text() +
theme_dag_blank() +
theme(legend.position = "none")
setwd("~/Documents/GitHub/stats-ii-lab/Session 5")
read_csv("./data/evaluation_data.csv")
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(stargazer) # for formatting model output
library(kableExtra) # for formatting data frames
library(AER) # for ivreg()
set.seed(123) # for consistent results
eval_data <- read_csv("./data/evaluation_data.csv") #loading simulated data frame
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(stargazer) # for formatting model output
library(kableExtra) # for formatting data frames
library(AER) # for ivreg()
set.seed(123) # for consistent results
eval_data <- read_csv("./data/evaluation_data.csv") #loading simulated data frame
ctable(eval_data$net_use, dat$sms,  prop = "n")
library(summarytools) # for ctable()
library(stargazer) # for formatting model output
library(kableExtra) # for formatting data frames
library(AER) # for ivreg()
set.seed(123) # for consistent results
eval_data <- read_csv("./data/evaluation_data.csv") #loading simulated data frame
ctable(eval_data$net_use, dat$sms,  prop = "n")
ctable(eval_data$net_use, eval_data$sms,  prop = "n")
ctable(eval_data$net_use, eval_data$sms,  prop = "n") %>% kable() %>%
kable_styling()
ctable(eval_data$net_use, eval_data$sms,  prop = "n")
eval_data <- read.csv("./data/evaluation_data.csv") #loading simulated data frame
table(eval_data$net_use, eval_data$sms)
ctable(eval_data$net_use, eval_data$sms, style = "rmarkdown")
table <- ctable(eval_data$net_use, eval_data$sms, style = "rmarkdown")
View(table)
ctable(eval_data$net_use, eval_data$sms, style = "rmarkdown")
print(ctable(eval_data$net_use, eval_data$sms), method = "render")
print(ctable(eval_data$net_use, eval_data$sms, prop = "n"), method = "render")
ctable(eval_data$net_use, eval_data$sms, prop = "n")
ctable(eval_data$net_use, eval_data$sms, prop = "n", method = "render")
ctable(eval_data$net_use, eval_data$sms, prop = "n", method = "render")
table(eval_data$net_use, eval_data$sms)
table(eval_data$net_use, eval_data$sms) %>% kable()
table(eval_data$net_use, eval_data$sms) %>% kable() %>%
kable_styling()
tab <- table(eval_data$net_use, eval_data$sms)
tab
tab <- table(eval_data$net_use, eval_data$sms) %>% data.frame()
tab
ctable(eval_data$net_use, eval_data$sms, prop = "n")
table <- ctable(eval_data$net_use, eval_data$sms, prop = "n")
table$cross_table
table$cross_table %>% kable()
table$cross_table %>% kable() %>%
kable_styling()
table$cross_table
cross_tab <- ctable(eval_data$net_use, eval_data$sms, prop = "n")
cross_tab$cross_table
cross_tab$cross_table %>% data_frame()
cross_tab$cross_table %>% data.frame()
cross_tab <- table(eval_data$net_use, eval_data$sms, prop = "n")
cross_tab <- table(eval_data$net_use, eval_data$sms)
cross_tab
cross_tab$cross_table %>% kable() %>%
kable_styling()
cross_tab <- ctable(eval_data$net_use, eval_data$sms, prop = "n")
cross_tab$cross_table %>% kable() %>%
kable_styling()
cross_tab$cross_table %>% kable(col.names = c("", "SMS=0", "SMS=1"), row.names = c("", "NET=0", "NET=1")) %>%
kable_styling()
cross_tab <- ctable(eval_data$net_use, eval_data$sms, prop = "n")
cross_tab$cross_table %>% kable(col.names = c("", "SMS=0", "SMS=1"), row.names = c("", "NET=0", "NET=1")) %>%
kable_styling()
cross_tab$cross_table
cross_tab$cross_table %>% kable(col.names = c("", "SMS=0", "SMS=1", "Total"), row.names = c("", "NET=0", "NET=1", "Total")) %>%
kable_styling()
cross_tab$cross_table %>% kable(col.names = c("", "SMS=0", "SMS=1", "Total")) %>%
kable_styling()
cross_tab <- ctable(eval_data$net_use, eval_data$sms, prop = "n")
cross_tab$cross_table %>% kable() %>%
kable_styling()
ctable(eval_data$net_use, eval_data$sms, prop = "n")
print(ctable(eval_data$net_use, eval_data$sms, prop = "n", style = "rmarkdown")
ctable(eval_data$net_use, eval_data$sms, prop = "n", style = "rmarkdown")
ctable(eval_data$net_use, eval_data$sms, prop = "n", style = "rmarkdown")
ctable(eval_data$net_use, eval_data$sms, prop = "n", style = "rmarkdown")
print(ctable(eval_data$net_use, eval_data$sms, prop = "n"), method = "render")
ctable(eval_data$net_use, eval_data$sms, prop = "n") %>% kable(format = "html")
ctable(eval_data$net_use, eval_data$sms, prop = "n") %>% kable(format = "html") %>%
kable_s
ctable(eval_data$net_use, eval_data$sms, prop = "n") %>% kable(format = "html") %>%
kable_styling()
ctable(eval_data$net_use, eval_data$sms, prop = "n")
print(ctable(eval_data$net_use, eval_data$sms, prop = "n"), method = "render") %>%
st_options(footnote = NA)
print(ctable(eval_data$net_use, eval_data$sms, prop = "n"), method = "render")
st_options(footnote = NA)
ggplot(eval_data, x = factor(sms), y = (malaria)) +
geom_density()
ggplot(eval_data, x = factor(sms), y = (malaria)) +
geom_boxplot() +
geom_jitter()
ggplot(eval_data, x = factor(sms), y = factor(malaria)) +
geom_boxplot() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria))) +
geom_boxplot() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria))) +
geom_scatter() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria))) +
geom_point() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria), color = factor(sms))) +
geom_point() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria), color = factor(net_use))) +
geom_point() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(malaria), color = factor(malaria))) +
geom_point() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter()
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal()
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1"))
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1"))
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_fill_discrete(labels = c("Not infected", "Infected"))
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected"))
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment",
fill = "Malaria")
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment")
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment") +
theme(legend.title = "none")
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment") +
theme(legend.title = "")
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment") +
theme(legend.title = "")
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment") +
theme()
ggplot(eval_data, aes(x = factor(sms), y = factor(net_use), color = factor(malaria))) +
geom_point() +
geom_jitter() +
theme_minimal() +
scale_x_discrete(labels = c("SMS = 0", "SMS = 1")) +
scale_y_discrete(labels = c("NET = 0", "NET = 1")) +
scale_color_discrete(labels = c("Not infected", "Infected")) +
labs(x = "Encouragement",
y = "Treatment",
color = "")
summary(lm(net_use ~ sms, eval_data))
summary(naive_model)
naive_model <- lm(malaria ~ net_use, eval_data)
summary(naive_model)
summary(naive_model)
itt_model <- lm(malaria ~ sms, eval_data)
summary(itt_model)
late_model <- ivreg(malaria ~ net_use | sms, eval_data)
late_model <- ivreg(malaria ~ net_use | sms, data= eval_data)
summary(late_model)
# generate xStar and c and using a common variance
set.seed(123)
xStarAndC <- MASS::mvrnorm(1000, c(20, 15), matrix(c(1, 0.5, 0.5, 1), 2, 2))
xStar <- xStarAndC[, 1]
c <- xStarAndC[, 2]
# z is truly exogenous; x a combination of xStar and z
z <- rnorm(1000)
x <- xStar + z
# generate the response variable y
y <- 1 + x + c + rnorm(1000, 0, 0.5)
# generate xStar and c and using a common variance
xStarAndC <- MASS::mvrnorm(1000, c(20, 15), matrix(c(1, 0.5, 0.5, 1), 2, 2))
xStar <- xStarAndC[, 1]
c <- xStarAndC[, 2]
xStarAndC
xStar <- xStarAndC[, 1]
xStar
c
# z is truly exogenous; x a combination of xStar and z
z <- rnorm(1000)
x <- xStar + z
# generate the response variable y
y <- 1 + x + c + rnorm(1000, 0, 0.5)
# check to make sure everything has worked so far
cor(x, c) # moderate correlation
cor(z, c) # virtually no correlation
summary(lm(x~z))
x <- xStar + 0.02*z
summary(lm(x~z))
x <- xStar + 0.2*z
summary(lm(x~z))
x <- xStar + 0.05*z
summary(lm(x~z))
x <- xStar + 0.1*z
summary(lm(x~z))
x <- xStar + 0.09*z
summary(lm(x~z))
x <- xStar + 0.08*z
summary(lm(x~z))
